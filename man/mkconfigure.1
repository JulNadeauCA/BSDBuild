.\"
.\" Copyright (c) 2007-2010 Hypertriton, Inc. <http://www.hypertriton.com/>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd JULY 19, 2007
.Dt MKCONFIGURE 1
.Os
.ds vT BSDBuild Reference
.ds oS BSDBuild 2.8
.Sh NAME
.Nm mkconfigure
.Nd Compile BSDBuild configure scripts
.Sh SYNOPSIS
.Nm mkconfigure
.Sh DESCRIPTION
The
.Nm
program reads a
.Pa configure.in
source from the standard input and outputs a valid Bourne configure script to
the standard output.
.Pp
The
.Pa configure.in
source can contain a number of special directives, along with Bourne shell
code fragments that will be copied verbatim to the configure script.
.Pp
.Sh MKCONFIGURE DIRECTIVES
.Pp
.Nm
directives are case-insensitive.
The following directives are recognized:
.Bl -tag -width "CONFIG_SCRIPT(name[,args]) "
.It Ev PACKAGE(name)
Short name for the software package.
.It Ev VERSION(string)
Specify software version.
.It Ev RELEASE(string)
Specify release name.
.It Ev CHECK(package[,version])
Invoke one of the standard BSDBuild tests (see
.Pa http://bsdbuild.hypertriton.com/tests.html
for a list).
Most tests will set the
.Dv HAVE_FOO
(where
.Dv FOO
is the package name in upper-case) variable to indicate the results
of the test.
C/C++ libraries also typically set
.Dv FOO_CFLAGS
and
.Dv FOO_LIBS .
.Pp
If the
.Fa version
argument is specified, the version number is verified as well and
.Dv MK_VERSION_OK
is defined to
.Sq yes
if the versions are compatible.
.It Ev REQUIRE(package[,version])
Same as the
.Ev CHECK
directive, except that the configure script will fail if the package is
either not found, or if the version is too old.
.It Ev REGISTER(name,descr)
Describe a configure script argument (for --help).
The
.Fa name
argument is usually of the form
.Ar --with-foo
or
.Ar --enable-foo ) ,
and
.Fa descr
is a description of the option (it is also customary to mention the default
value of this option in the description).
.It Ev REGISTER_SECTION(string)
Describe a section of configure script arguments (for --help).
.It Ev HDEFINE(opt,val)
Define a C preprocessor style header option.
.Fa opt
is an unquoted, usually upper-case string and
.Fa val
is a string enclosed in double quotes.
For example, if
.Fa opt
is
.Sq ENABLE_FOO ,
a file
.Pa config/enable_foo.h
will be generated by configure.
.It Ev HUNDEF(opt)
Similar to
.Ev HDEFINE ,
except that
.Pa config/<option>.h
will contain an #undef directive.
.It Ev MDEFINE(opt,val)
Define a
.Xr make 1
variable, which will be visible in the project's makefiles.
.Fa opt
is again an unquoted, usually upper-case string and
.Fa val
is a value enclosed in double quotes.
.It Ev C_DEFINE(opt)
(C-style compilers only) Specify a global define that will be passed to
the compiler.
This results in the
.Ar -DFOO
flag being used in compiler command lines, but it is also interpreted by
.Xr build.proj.mk 5 .
.It Ev C_INCDIR(dir)
(C-style compilers only) Specify a directory for include files.
This results in the
.Ar -Idir
flag being added to the compiler command line, but it is also interpreted
by
.Xr build.proj.mk 5 .
.It Ev C_INCDIR_CONFIG(dir)
(C-style compilers only) Specify a target directory for configure-script
generated include files.
By default, the files are written to
.Pa ./config .
This directive can be invoked multiple times to specify extra directories
into which those files will be copied.
.It Ev C_INCPREP(dir)
(C-style compilers only) Specify a single directory to contain include files.
The configure script will provide the user with the option of generating
preprocessed header files into this directory, or replace it by a symlink
to the source directory.
.It Ev C_OPTION
Provide a gcc-style compiler option, such as
.Ar -Wall ,
.Ar -Werror
or
.Ar -Wmissing-prototypes .
For environments using other compilers, BSDBuild will attempt to set
equivalent options.
.It Ev LD_OPTION
Provide a ld-style linker option, such as
.Ar -g
or
.Ar -nostdlib .
.It Ev C_EXTRA_WARNINGS
Request extra compiler warnings.
The exact meaning is compiler specific.
.It Ev C_FATAL_WARNINGS
Request that compilation fail if warnings are encountered.
.It Ev CONFIG_SCRIPT(name[,args])
Generate a standard "foo-config" script.
.Fa name
specifies the name of the script.
For C/C++ style packages, the arguments are usually the
.Sq --cflags
output, followed by the
.Sq --libs
output.
.It Ev CONFIG_GUESS(path)
Specify an alternate path to
.Pa config.guess
(default is
.Pa mk/config.guess ) .
.El
.\" .Sh ENVIRONMENT
.\" .Sh FILES
.Sh SEE ALSO
.Xr build.prog.mk 5 ,
.Xr build.lib.mk 5 ,
.Xr build.common.mk 5
.Pp
http://hypertriton.com/bsdbuild/
